name: Rust

on:
  push:
    branches:
      - master

jobs:
  format:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v1

    - run: cargo fmt --all -- --check

  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        postgres: 12

    services:
      postgres:
        image: postgres:${{ matrix.postgres }}
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: postgres
        ports:
        # will assign a random free host port
        - 5432/tcp
        # needed because the postgres container does not provide a healthcheck
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

    steps:
    - uses: actions/checkout@v1

    - name: Initialize database
      run: psql -f server/sql/schema.sql
      env:
        PGHOST: localhost
        PGUSER: postgres
        PGPASSWORD: postgres
        PGDATABASE: postgres
        PGPORT: ${{ job.services.postgres.ports[5432] }}

    - name: Install Rust toolchain
      uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
        profile: minimal
        override: true

    - name: Cache target/
      uses: actions/cache@v1
      with:
        path: target
        key: ${{ runner.os }}-cargo-build-target-${{ hashFiles('**/Cargo.lock') }}

    - name: Build Project
      run: cargo build --relase
      env:
        DATABASE_URL: postgres://postgres:postgres@localhost:${{ job.services.postgres.ports[5432] }}/postgres
